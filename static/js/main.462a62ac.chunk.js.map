{"version":3,"sources":["logo.svg","Header.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","class","href","Footer","target","src","border","method","action","style","marginBottom","name","type","id","value","placeholder","texAlign","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,mKCsB5BC,MAlBf,WACE,OACE,yBAAKC,MAAM,eACX,wBAAIA,MAAM,+BACF,4BAAI,uBAAGC,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,gBAAR,aACJ,4BAAI,uBAAGA,KAAK,cAAR,WACJ,4BAAI,uBAAGA,KAAK,cAAR,WACJ,4BAAI,uBAAGA,KAAK,eAAR,YACJ,4BAAI,uBAAGA,KAAK,YAAR,SACJ,4BAAI,uBAAGA,KAAK,eAAR,YACJ,4BAAI,uBAAGA,KAAK,gBAAR,UACJ,4BAAI,uBAAGA,KAAK,eAAR,gBCuCDC,MAnDf,WACE,OACF,yBAAKF,MAAM,kBACL,yBAAKA,MAAM,aACX,yBAAKA,MAAM,OACT,yBAAKA,MAAM,YACP,oCACA,wBAAIA,MAAM,aACV,4BAAI,uBAAGC,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,gBAAR,aACJ,4BAAI,uBAAGA,KAAK,cAAR,WACJ,4BAAI,uBAAGA,KAAK,cAAR,WACJ,4BAAI,uBAAGA,KAAK,eAAR,YACJ,4BAAI,uBAAGA,KAAK,YAAR,SACJ,4BAAI,uBAAGA,KAAK,eAAR,YACJ,4BAAI,uBAAGA,KAAK,gBAAR,aACJ,4BAAI,uBAAGA,KAAK,iBAAR,cACJ,4BAAI,uBAAGA,KAAK,eAAR,eAGR,yBAAKD,MAAM,YACP,oCACA,2BAAG,uBAAGC,KAAK,gDAAgDE,OAAO,UAAS,yBAAKC,IAAI,sBAAsBC,OAAO,SAGrH,yBAAKL,MAAM,YACP,iDACA,0BAAMM,OAAO,OAAOC,OAAO,uCAAuCJ,OAAO,UACzE,yBAAKK,MAAO,CAACC,aAAa,SAC1B,2BAAOC,KAAK,aAAaC,KAAK,OAAOC,GAAG,OAAOC,MAAM,GAAGC,YAAY,UAEpE,yBAAKN,MAAO,CAACC,aAAa,SAC1B,2BAAOC,KAAK,QAAQC,KAAK,OAAOC,GAAG,QAAQC,MAAM,GAAGC,YAAY,WAEhE,yBAAKN,MAAO,CAACO,SAAU,UACvB,2BAAOJ,KAAK,SAASD,KAAK,YAC1B,2BAAOC,KAAK,SAASD,KAAK,UAAUG,MAAM,QAC1C,2BAAOF,KAAK,SAASD,KAAK,SAASG,MAAM,QACzC,2BAAOF,KAAK,SAASD,KAAK,IAAIG,MAAM,SACpC,2BAAOF,KAAK,SAASD,KAAK,WAAWG,MAAM,UAC3C,2BAAOF,KAAK,SAASD,KAAK,SAASE,GAAG,SAASC,MAAM,OAAOb,MAAM,2BCzB/DgB,MAdf,WACE,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,kBACb,yBAAKjB,MAAM,QAAO,uBAAGC,KAAK,KAAI,yBAAKG,IAAI,uBAEvC,yBAAKa,UAAU,gBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.462a62ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Header() {\n  return (\n    <div class=\"nav-wrapper\">\n    <ul class=\"nav nav-pills nav-justified\">\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"calendar.php\">Calendar</a></li>\n            <li><a href=\"events.php\">Events</a></li>\n            <li><a href=\"rental.php\">Rental</a></li>\n            <li><a href=\"members.php\">Members</a></li>\n            <li><a href=\"join.php\">Join</a></li>\n            <li><a href=\"gallery.php\">Gallery</a></li>\n            <li><a href=\"sponsors.php\">Donor</a></li>\n            <li><a href=\"contact.php\">Contacts</a></li>\n    </ul> \n</div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Footer() {\n  return (\n<div class=\"footer-wrapper\">\n      <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n            <h2>Menu</h2>\n            <ul class=\"footernav\">\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"calendar.php\">Calendar</a></li>\n            <li><a href=\"events.php\">Events</a></li>\n            <li><a href=\"rental.php\">Rental</a></li>\n            <li><a href=\"members.php\">Members</a></li>\n            <li><a href=\"join.php\">Join</a></li>\n            <li><a href=\"gallery.php\">Gallery</a></li>\n            <li><a href=\"sponsors.php\">Sponsors</a></li>\n            <li><a href=\"donations.php\">Donations</a></li>\n            <li><a href=\"contact.php\">Contacts</a></li>\n            </ul>\n        </div>\n        <div class=\"col-lg-3\">\n            <h2>&nbsp;</h2>\n            <p><a href=\"https://www.facebook.com/aguadulcewomensclub/\" target=\"_blank\"><img src=\"images/facebook.jpg\" border=\"0\"/></a></p>\n        </div>\n\n        <div class=\"col-lg-5\">\n            <h2>Newsletter Signup</h2>\n            <form method=\"post\" action=\"http://elists.esolutions.net/box.php\" target=\"_blank\">\n            <div style={{marginBottom:10 + 'px'}}>\n            <input name=\"first_name\" type=\"text\" id=\"Name\" value=\"\" placeholder=\"Name\"/>\n            </div>\n            <div style={{marginBottom:10 + 'px'}}>\n            <input name=\"email\" type=\"text\" id=\"email\" value=\"\" placeholder=\"Email\"/>\n            </div>\n            <div style={{texAlign: 'right'}}>\n            <input type=\"hidden\" name=\"field[]\"/>\n            <input type=\"hidden\" name=\"nlbox[]\" value=\"553\"/>\n            <input type=\"hidden\" name=\"funcml\" value=\"add\"/>\n            <input type=\"hidden\" name=\"p\" value=\"1004\"/>\n            <input type=\"hidden\" name=\"_charset\" value=\"utf-8\"/>\n            <input type=\"submit\" name=\"button\" id=\"button\" value=\"Send\" class=\"btn btn-default\"/>\n            </div>\n            </form>\n        </div>\n      </div>\n        \n        </div>\n      </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Header from './Header'\nimport Footer from './Footer'\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <div className=\"header-wrapper\">\n        <div class=\"logo\"><a href=\"/\"><img src=\"images/logo.png\"/></a></div>\n        </div> \n        <div className=\"page-wrapper\">\n          <Header/>\n          <Footer/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}